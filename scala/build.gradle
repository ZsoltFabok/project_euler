apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'scalaStyle'
apply plugin: org.scoverage.ScoveragePlugin

def mainClassName = 'project_euler.Main'
def projectName = 'project_euler'

def scalaVersion      = '2.10.3'
def scalaMinorVersion = '2.10'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  mavenCentral()
}

jar {
  baseName = projectName
  enabled=true
  manifest {
    attributes("Main-Class": "$mainClassName")
  }
}

dependencies {
    compile (
      [group: "org.scala-lang", name: "scala-library", version: "$scalaVersion"],
      [group: "org.scala-lang", name: "scala-compiler", version: "$scalaVersion"],
    )

    testCompile (
      [group: "org.scalatest", name: "scalatest_$scalaMinorVersion", version: "2.2.0"],
      [group: "junit", name: "junit", version: "4.11"],
      [group: "org.mockito", name: "mockito-all", version: "1.9.5"]
    )
}

// incremental compilation
tasks.withType(ScalaCompile) {
    scalaCompileOptions.useAnt = false
    scalaCompileOptions.additionalParameters = ["-unchecked", "-deprecation", "-feature", "-Xfatal-warnings"]
}

test {
   testLogging.showStandardStreams = true
}

buildscript {
  repositories {
    maven { url "http://dl.bintray.com/releashaus/release" }
    maven { url "https://oss.sonatype.org/content/groups/public" }
    mavenCentral()
  }

  dependencies {
    classpath(
      'org.github.mansur.scalastyle:gradle-scalastyle-plugin_2.10:0.4.1',
      'org.scoverage:gradle-scoverage:0.5-SNAPSHOT'
    )
  }
}

scalaStyle {
  configLocation = "etc/scalastyle_config.xml"
  includeTestSourceDirectory = true
  source = "src/main/scala"
  testSource = "src/test/scala"
}

checkScoverage {
  minimumLineRate = 0.95
}

dependencies {
  scoverage 'org.scoverage:scalac-scoverage-plugin_2.10:0.99.7'
}
